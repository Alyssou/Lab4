name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint (Node v${{ matrix.node }} on ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        node: [16, 18]
    defaults:
      run:
        working-directory: linting
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Restore node_modules cache
        id: node-cache
        uses: actions/cache@v4
        with:
          path: linting/node_modules
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('linting/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node }}-
            ${{ runner.os }}-node-

      - name: Install dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Run lint
        run: npm run -s lint --if-present

  test:
    name: Test (Node v${{ matrix.node }} on ${{ matrix.os }})
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        node: [16, 18]
    defaults:
      run:
        working-directory: linting
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Restore node_modules cache
        id: node-cache
        uses: actions/cache@v4
        with:
          path: linting/node_modules
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('linting/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node }}-
            ${{ runner.os }}-node-

      - name: Install dependencies (if cache missed)
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Run tests
        run: npm test --if-present

  build:
    name: Build (Node v${{ matrix.node }} on ${{ matrix.os }})
    needs: [lint, test]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        node: [16, 18]
    defaults:
      run:
        working-directory: linting
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Restore node_modules cache
        id: node-cache
        uses: actions/cache@v4
        with:
          path: linting/node_modules
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('linting/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node }}-
            ${{ runner.os }}-node-

      - name: Install dependencies (if cache missed)
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Run build
        run: npm run -s build --if-present

      - name: Upload build artifacts (if any)
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ runner.os }}-node${{ matrix.node }}
          path: |
            linting/dist
            linting/build
            linting/out
          if-no-files-found: ignore
